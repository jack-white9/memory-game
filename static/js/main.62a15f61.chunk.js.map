{"version":3,"sources":["components/Header.js","components/Score.js","components/Cards.js","App.js","index.js"],"names":["Header","className","Score","score","clickedNums","Cards","setScore","resetScore","useState","randomArray","updateRandomArray","useEffect","document","body","querySelector","innerHTML","newArray","i","randomNum","parseInt","Math","random","includes","push","concat","map","num","onClick","card","target","textContent","checkPrevClick","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"sQAWeA,EARA,WACX,OACI,wBAAQC,UAAU,SAAlB,0BCMOC,G,MARD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACZ,OACI,yBAASF,UAAU,iBAAnB,SACI,oBAAGA,UAAU,QAAb,oBAA6BE,SCHrCC,G,MAAc,IA2CHC,EAzCD,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,WACtB,EAAyCC,mBAAS,IAAlD,mBAAOC,EAAP,KAAoBC,EAApB,KAyBA,OAdAC,qBAAU,WACNC,SAASC,KAAKC,cAAc,kBAAkBC,UAAY,GAE1D,IADA,IAAIC,EAAW,GACNC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAIC,EAAYC,SAAyB,GAAhBC,KAAKC,SAAgB,GAC1CL,EAASM,SAASJ,GAClBD,GAAK,EAELD,EAASO,KAAKL,GAGtBR,EAAkBD,EAAYe,OAAOR,MACtC,CAACV,IAGA,yBAASL,UAAU,gBAAnB,SACKQ,EAAYgB,KAAI,SAACC,GACd,OAAO,wBACKzB,UAAU,OACV0B,QAAS,SAACC,GACNtB,IA7B5B,SAAwBsB,GAChBxB,EAAYkB,SAASM,EAAKC,OAAOC,cACjCvB,IACAH,EAAc,IAEdA,EAAYmB,KAAKK,EAAKC,OAAOC,aAyBTC,CAAeH,IAJxB,SAMGF,UCfXM,MAnBf,WACI,MAA0BxB,mBAAS,GAAnC,mBAAOL,EAAP,KAAcG,EAAd,KAEA,OACI,0BAASL,UAAU,eAAnB,UACI,0BAASA,UAAU,kBAAnB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAOE,MAAOA,OAElB,yBAASF,UAAU,gBAAnB,SACI,cAAC,EAAD,CACIK,SAAU,kBAAMA,EAASH,EAAQ,IACjCI,WAAY,kBAAMD,EAASH,EAAQA,YCdvD8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASwB,eAAe,W","file":"static/js/main.62a15f61.chunk.js","sourcesContent":["import React from 'react';\nimport '../themes/Header.css'\n\nconst Header = () => {\n    return (\n        <header className=\"header\">\n            Memory Game\n        </header>\n    )\n}\n\nexport default Header;\n","import React from 'react';\nimport '../themes/Score.css';\n\nconst Score = ({score}) => {\n    return (\n        <section className=\"scoreContainer\">\n            <p className=\"score\">Score: {score}</p>\n        </section>\n    )\n}\n\nexport default Score;\n","import React, { useState, useEffect } from 'react';\nimport '../themes/Cards.css';\n\nlet clickedNums = []; // This global variable is a really ugly code smell but it was the only way to make the clickedNums stop emptying on each click. Revise later.\n\nconst Cards = ({setScore, resetScore}) => {\n    const [randomArray, updateRandomArray] = useState([]);\n    \n    function checkPrevClick(card) {\n        if (clickedNums.includes(card.target.textContent)) {\n            resetScore();\n            clickedNums = [];\n        } else {\n            clickedNums.push(card.target.textContent);\n        }\n    }\n\n    useEffect(() => {\n        document.body.querySelector('.cardContainer').innerHTML = '';\n        let newArray = [];\n        for (let i = 0; i < 12; i++) {\n            let randomNum = parseInt(Math.random() * 12 + 1);\n            if (newArray.includes(randomNum)) {\n                i -= 1;\n            } else {\n                newArray.push(randomNum)\n            }\n        }\n        updateRandomArray(randomArray.concat(newArray));\n    }, [setScore]);\n\n    return (\n        <section className=\"cardContainer\">\n            {randomArray.map((num) => {\n                return <button \n                            className=\"card\" \n                            onClick={(card) => {\n                                setScore();\n                                checkPrevClick(card);\n                            }}\n                        >{num}</button>\n            })}\n        </section>\n    );\n}\n\nexport default Cards;\n","import React, { useState } from 'react';\nimport './themes/App.css';\nimport Header from './components/Header';\nimport Score from './components/Score';\nimport Cards from './components/Cards';\n\nfunction App() {\n    const [score, setScore] = useState(0);\n\n    return(\n        <section className=\"appContainer\">\n            <section className=\"headerContainer\">\n                <Header />\n                <Score score={score}/>\n            </section>\n            <section className=\"mainContainer\">\n                <Cards \n                    setScore={() => setScore(score + 1)} \n                    resetScore={() => setScore(score - score)}\n                />\n            </section>\n        </section>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}